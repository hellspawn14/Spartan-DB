-- MySQL Script generated by MySQL Workbench
-- Sun Oct 12 23:27:40 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Spartan
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Spartan` ;

-- -----------------------------------------------------
-- Schema Spartan
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spartan` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Spartan` ;

-- -----------------------------------------------------
-- Table `Spartan`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Users` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Users` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `UserName` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUser`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Auth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Auth` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Auth` (
  `idUser` INT NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUser`),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ScoreBoard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ScoreBoard` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ScoreBoard` (
  `idUser` INT NOT NULL,
  `Score` DOUBLE NOT NULL,
  PRIMARY KEY (`idUser`),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`History` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`History` (
  `idUser` INT NOT NULL,
  `nSoccer` INT NOT NULL,
  `nBasketball` INT NOT NULL,
  `nVoleyball` INT NOT NULL,
  `nTennis` INT NOT NULL,
  `nPaintball` INT NOT NULL,
  `nVideogames` INT NOT NULL,
  `nKarts` INT NOT NULL,
  `nVictories` INT NOT NULL,
  `nLoses` INT NOT NULL,
  PRIMARY KEY (`idUser`),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Events` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Events` (
  `idEvent` INT NOT NULL AUTO_INCREMENT,
  `Sport` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `idAuthor` INT NOT NULL,
  `Spots` INT NOT NULL,
  `State` TINYINT(1) NOT NULL,
  `Place` VARCHAR(45) NOT NULL,
  `Key` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEvent`, `idAuthor`, `Place`),
  INDEX `idAuthor_idx` (`idAuthor` ASC),
  CONSTRAINT `idAuthor`
    FOREIGN KEY (`idAuthor`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Spots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Spots` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Spots` (
  `idEvent` INT NOT NULL,
  `idUser` INT NOT NULL,
  `Confirmation` TINYINT(1) NOT NULL,
  PRIMARY KEY (`idEvent`, `idUser`),
  INDEX `idUser_idx` (`idUser` ASC),
  CONSTRAINT `idEvent`
    FOREIGN KEY (`idEvent`)
    REFERENCES `Spartan`.`Events` (`idEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournaments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournaments` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournaments` (
  `idTournament` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Sport` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `idOrganizer` INT NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTournament`, `idOrganizer`),
  INDEX `idAuthor_idx` (`idOrganizer` ASC),
  CONSTRAINT `idAuthor`
    FOREIGN KEY (`idOrganizer`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Teams` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Teams` (
  `idTeam` INT NOT NULL AUTO_INCREMENT,
  `TeamName` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTeam`, `TeamName`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`TeamMembers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`TeamMembers` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`TeamMembers` (
  `idTeam` INT NOT NULL,
  `idMember` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTeam`, `idMember`),
  INDEX `idMember_idx` (`idMember` ASC),
  CONSTRAINT `idTeam`
    FOREIGN KEY (`idTeam`)
    REFERENCES `Spartan`.`Teams` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idMember`
    FOREIGN KEY (`idMember`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ParticipantGroups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ParticipantGroups` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ParticipantGroups` (
  `idGroupTournament` INT NOT NULL,
  `idTeam` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Position` INT NOT NULL,
  PRIMARY KEY (`idGroupTournament`, `idTeam`),
  INDEX `idTeam_idx` (`idTeam` ASC),
  CONSTRAINT `idGroupTournament`
    FOREIGN KEY (`idGroupTournament`)
    REFERENCES `Spartan`.`GroupTournaments` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idTeam`
    FOREIGN KEY (`idTeam`)
    REFERENCES `Spartan`.`Teams` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloTournament`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloTournament` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloTournament` (
  `idTournament` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Description` VARCHAR(45) NOT NULL,
  `Sport` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `idOrganizer` INT NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTournament`, `idOrganizer`),
  INDEX `idOrganizer_idx` (`idOrganizer` ASC),
  CONSTRAINT `idOrganizer`
    FOREIGN KEY (`idOrganizer`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Tournaments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Tournaments` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Tournaments` (
)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ParticipantsSolo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ParticipantsSolo` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ParticipantsSolo` (
  `idUser` INT NOT NULL,
  `idTournament` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Position` INT NOT NULL,
  PRIMARY KEY (`idUser`, `idTournament`),
  INDEX `idTournament_idx` (`idTournament` ASC),
  CONSTRAINT `idUser`
    FOREIGN KEY (`idUser`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idTournament`
    FOREIGN KEY (`idTournament`)
    REFERENCES `Spartan`.`SoloTournament` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloTournamentEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloTournamentEvents` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloTournamentEvents` (
  `idEvent` INT NOT NULL AUTO_INCREMENT,
  `idTournament` INT NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `SoloTournamentEventscol` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEvent`, `idTournament`),
  INDEX `idTournament_idx` (`idTournament` ASC),
  CONSTRAINT `idTournament`
    FOREIGN KEY (`idTournament`)
    REFERENCES `Spartan`.`SoloTournament` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournamentEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournamentEvents` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournamentEvents` (
  `idEvent` INT NOT NULL AUTO_INCREMENT,
  `idTournament` INT NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEvent`, `idTournament`),
  CONSTRAINT `idTournament`
    FOREIGN KEY (`idEvent`)
    REFERENCES `Spartan`.`GroupTournaments` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloEventParticipants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloEventParticipants` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloEventParticipants` (
  `idEvent` INT NOT NULL,
  `idParticipant` INT NOT NULL,
  PRIMARY KEY (`idEvent`, `idParticipant`),
  INDEX `idParticipant_idx` (`idParticipant` ASC),
  CONSTRAINT `idEvent`
    FOREIGN KEY (`idEvent`)
    REFERENCES `Spartan`.`SoloTournamentEvents` (`idEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idParticipant`
    FOREIGN KEY (`idParticipant`)
    REFERENCES `Spartan`.`ParticipantsSolo` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournamentParticipants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournamentParticipants` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournamentParticipants` (
  `idEvent` INT NOT NULL,
  `idTeam` INT NOT NULL,
  PRIMARY KEY (`idEvent`, `idTeam`),
  INDEX `idTeam_idx` (`idTeam` ASC),
  CONSTRAINT `idEvent`
    FOREIGN KEY (`idEvent`)
    REFERENCES `Spartan`.`GroupTournamentEvents` (`idEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `idTeam`
    FOREIGN KEY (`idTeam`)
    REFERENCES `Spartan`.`ParticipantGroups` (`idGroupTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
