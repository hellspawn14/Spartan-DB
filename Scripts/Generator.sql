-- MySQL Script generated by MySQL Workbench
-- Mon Oct 13 22:18:49 2014
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='TRADITIONAL,ALLOW_INVALID_DATES';

-- -----------------------------------------------------
-- Schema Spartan
-- -----------------------------------------------------
DROP SCHEMA IF EXISTS `Spartan` ;

-- -----------------------------------------------------
-- Schema Spartan
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Spartan` DEFAULT CHARACTER SET utf8 COLLATE utf8_general_ci ;
USE `Spartan` ;

-- -----------------------------------------------------
-- Table `Spartan`.`Users`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Users` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Users` (
  `idUser` INT NOT NULL AUTO_INCREMENT,
  `UserName` VARCHAR(45) NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `LastName` VARCHAR(45) NOT NULL,
  `PhoneNumber` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUser`, `UserName`),
  UNIQUE INDEX `UserName_UNIQUE` (`UserName` ASC))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Auth`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Auth` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Auth` (
  `idUserAuth` INT NOT NULL,
  `Password` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idUserAuth`),
  CONSTRAINT `FK_Auth_Users`
    FOREIGN KEY (`idUserAuth`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ScoreBoard`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ScoreBoard` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ScoreBoard` (
  `idUserBoard` INT NOT NULL,
  `Score` DOUBLE NOT NULL,
  PRIMARY KEY (`idUserBoard`),
  CONSTRAINT `FK_Score_Users`
    FOREIGN KEY (`idUserBoard`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`History`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`History` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`History` (
  `idUserHistory` INT NOT NULL,
  `nSoccer` INT NOT NULL,
  `nBasketball` INT NOT NULL,
  `nVoleyball` INT NOT NULL,
  `nTennis` INT NOT NULL,
  `nPaintball` INT NOT NULL,
  `nVideogames` INT NOT NULL,
  `nKarts` INT NOT NULL,
  `nVictories` INT NOT NULL,
  `nLoses` INT NOT NULL,
  PRIMARY KEY (`idUserHistory`),
  CONSTRAINT `FK_History_Users`
    FOREIGN KEY (`idUserHistory`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Events`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Events` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Events` (
  `idEvent` INT NOT NULL AUTO_INCREMENT,
  `Sport` VARCHAR(45) NOT NULL,
  `Description` BLOB NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `idEventAuthor` INT NOT NULL,
  `Spots` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Place` VARCHAR(45) NOT NULL,
  `Key` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEvent`, `idEventAuthor`, `Place`),
  INDEX `idAuthor_idx` (`idEventAuthor` ASC),
  CONSTRAINT `FK_Events_Users`
    FOREIGN KEY (`idEventAuthor`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Spots`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Spots` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Spots` (
  `idEvent` INT NOT NULL,
  `idParticipant` INT NOT NULL,
  `Confirmation` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idEvent`, `idParticipant`),
  INDEX `idUser_idx` (`idParticipant` ASC),
  CONSTRAINT `FK_Spots_Event`
    FOREIGN KEY (`idEvent`)
    REFERENCES `Spartan`.`Events` (`idEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Spots_Users`
    FOREIGN KEY (`idParticipant`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournaments`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournaments` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournaments` (
  `idTournament` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Description` BLOB NOT NULL,
  `Sport` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `idOrganizerGroup` INT NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTournament`, `idOrganizerGroup`),
  INDEX `idAuthor_idx` (`idOrganizerGroup` ASC),
  CONSTRAINT `FK_GroupTournaments_Users`
    FOREIGN KEY (`idOrganizerGroup`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`Teams`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`Teams` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`Teams` (
  `idTeam` INT NOT NULL AUTO_INCREMENT,
  `TeamName` VARCHAR(45) NOT NULL,
  `idCaptain` INT NOT NULL,
  PRIMARY KEY (`idTeam`, `TeamName`, `idCaptain`),
  INDEX `idCaptain_idx` (`idCaptain` ASC),
  CONSTRAINT `FK_Teams_Users`
    FOREIGN KEY (`idCaptain`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`TeamMembers`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`TeamMembers` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`TeamMembers` (
  `TeamId` INT NOT NULL,
  `idMember` INT NOT NULL,
  PRIMARY KEY (`TeamId`, `idMember`),
  INDEX `idMember_idx` (`idMember` ASC),
  CONSTRAINT `FK_Members_Teams`
    FOREIGN KEY (`TeamId`)
    REFERENCES `Spartan`.`Teams` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_Members_Users`
    FOREIGN KEY (`idMember`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ParticipantGroups`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ParticipantGroups` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ParticipantGroups` (
  `idGroupTournament` INT NOT NULL,
  `idParticipantTeam` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Position` INT NOT NULL,
  PRIMARY KEY (`idGroupTournament`, `idParticipantTeam`),
  INDEX `idTeam_idx` (`idParticipantTeam` ASC),
  CONSTRAINT `FK_ParticipantGroup_GroupTournaments`
    FOREIGN KEY (`idGroupTournament`)
    REFERENCES `Spartan`.`GroupTournaments` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_ParticipantGroup_Teams`
    FOREIGN KEY (`idParticipantTeam`)
    REFERENCES `Spartan`.`Teams` (`idTeam`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloTournament`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloTournament` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloTournament` (
  `idTournament` INT NOT NULL,
  `Name` VARCHAR(45) NOT NULL,
  `Description` BLOB NOT NULL,
  `Sport` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `idOrganizerSolo` INT NOT NULL,
  `Type` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idTournament`, `idOrganizerSolo`),
  INDEX `idOrganizer_idx` (`idOrganizerSolo` ASC),
  CONSTRAINT `FK_SoloTournament_Users`
    FOREIGN KEY (`idOrganizerSolo`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`ParticipantsSolo`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`ParticipantsSolo` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`ParticipantsSolo` (
  `idSoloParticipant` INT NOT NULL,
  `idTournamentSolo` INT NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  `Position` INT NOT NULL,
  PRIMARY KEY (`idSoloParticipant`, `idTournamentSolo`),
  INDEX `idTournament_idx` (`idTournamentSolo` ASC),
  CONSTRAINT `FK_SoloParticipants_Users`
    FOREIGN KEY (`idSoloParticipant`)
    REFERENCES `Spartan`.`Users` (`idUser`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_SoloParticipants_Tournament`
    FOREIGN KEY (`idTournamentSolo`)
    REFERENCES `Spartan`.`SoloTournament` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloTournamentEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloTournamentEvents` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloTournamentEvents` (
  `idSoloEvent` INT NOT NULL AUTO_INCREMENT,
  `idSoloTournament` INT NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idSoloEvent`, `idSoloTournament`),
  INDEX `idTournament_idx` (`idSoloTournament` ASC),
  CONSTRAINT `FK_SoloEvent_SoloTournament`
    FOREIGN KEY (`idSoloTournament`)
    REFERENCES `Spartan`.`SoloTournament` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournamentEvents`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournamentEvents` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournamentEvents` (
  `idGroupEvent` INT NOT NULL AUTO_INCREMENT,
  `GroupTournamentId` INT NOT NULL,
  `Date` VARCHAR(45) NOT NULL,
  `State` VARCHAR(45) NOT NULL,
  PRIMARY KEY (`idGroupEvent`, `GroupTournamentId`),
  INDEX `idTournament_idx` (`GroupTournamentId` ASC),
  CONSTRAINT `FK_GroupTournament_Event`
    FOREIGN KEY (`GroupTournamentId`)
    REFERENCES `Spartan`.`GroupTournaments` (`idTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`SoloEventParticipants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`SoloEventParticipants` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`SoloEventParticipants` (
  `idSoloEvent` INT NOT NULL,
  `idSoloPart` INT NOT NULL,
  PRIMARY KEY (`idSoloEvent`, `idSoloPart`),
  INDEX `idParticipant_idx` (`idSoloPart` ASC),
  CONSTRAINT `FK_SoloParticipants_SoloEvent`
    FOREIGN KEY (`idSoloEvent`)
    REFERENCES `Spartan`.`SoloTournamentEvents` (`idSoloEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_SoloParticipants_Participants`
    FOREIGN KEY (`idSoloPart`)
    REFERENCES `Spartan`.`ParticipantsSolo` (`idSoloParticipant`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Spartan`.`GroupTournamentParticipants`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `Spartan`.`GroupTournamentParticipants` ;

CREATE TABLE IF NOT EXISTS `Spartan`.`GroupTournamentParticipants` (
  `idGroupEvent` INT NOT NULL,
  `idParticipantTeam` INT NOT NULL,
  PRIMARY KEY (`idGroupEvent`, `idParticipantTeam`),
  INDEX `FK_GTParticipants_ParticipantGroups_idx` (`idParticipantTeam` ASC),
  CONSTRAINT `FK_GTParticipants_GTEvents`
    FOREIGN KEY (`idGroupEvent`)
    REFERENCES `Spartan`.`GroupTournamentEvents` (`idGroupEvent`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_GTParticipants_ParticipantGroups`
    FOREIGN KEY (`idParticipantTeam`)
    REFERENCES `Spartan`.`ParticipantGroups` (`idGroupTournament`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;

-- -----------------------------------------------------
-- Data for table `Spartan`.`Users`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`Users` (`idUser`, `UserName`, `Name`, `LastName`, `PhoneNumber`) VALUES (1, 'hellspawn', 'Andres ', 'Guzman', '3172362158');
INSERT INTO `Spartan`.`Users` (`idUser`, `UserName`, `Name`, `LastName`, `PhoneNumber`) VALUES (2, 'whogirl', 'Diva', 'Martinez', '3045603797');
INSERT INTO `Spartan`.`Users` (`idUser`, `UserName`, `Name`, `LastName`, `PhoneNumber`) VALUES (3, 'ClaudiaLJimnezG', 'Claudia', 'Jimenez', '0313394949');
INSERT INTO `Spartan`.`Users` (`idUser`, `UserName`, `Name`, `LastName`, `PhoneNumber`) VALUES (4, 'kirito', 'Kirigaya', 'Kazuto', '3001234567');
INSERT INTO `Spartan`.`Users` (`idUser`, `UserName`, `Name`, `LastName`, `PhoneNumber`) VALUES (5, 'Shinon', 'Asada', 'Shino', '3101234567');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`Auth`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`Auth` (`idUserAuth`, `Password`) VALUES (1, '123456');
INSERT INTO `Spartan`.`Auth` (`idUserAuth`, `Password`) VALUES (2, '123456');
INSERT INTO `Spartan`.`Auth` (`idUserAuth`, `Password`) VALUES (3, '123456');
INSERT INTO `Spartan`.`Auth` (`idUserAuth`, `Password`) VALUES (4, '123456');
INSERT INTO `Spartan`.`Auth` (`idUserAuth`, `Password`) VALUES (5, '12345');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`ScoreBoard`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`ScoreBoard` (`idUserBoard`, `Score`) VALUES (1, 4.5);
INSERT INTO `Spartan`.`ScoreBoard` (`idUserBoard`, `Score`) VALUES (2, 4.0);
INSERT INTO `Spartan`.`ScoreBoard` (`idUserBoard`, `Score`) VALUES (3, 4.0);
INSERT INTO `Spartan`.`ScoreBoard` (`idUserBoard`, `Score`) VALUES (4, 5.0);
INSERT INTO `Spartan`.`ScoreBoard` (`idUserBoard`, `Score`) VALUES (5, 4.5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`History`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`History` (`idUserHistory`, `nSoccer`, `nBasketball`, `nVoleyball`, `nTennis`, `nPaintball`, `nVideogames`, `nKarts`, `nVictories`, `nLoses`) VALUES (1, 0, 0, 0, 0, 0, 10, 0, 8, 2);
INSERT INTO `Spartan`.`History` (`idUserHistory`, `nSoccer`, `nBasketball`, `nVoleyball`, `nTennis`, `nPaintball`, `nVideogames`, `nKarts`, `nVictories`, `nLoses`) VALUES (2, 1, 1, 1, 1, 1, 10, 1, 14, 2);
INSERT INTO `Spartan`.`History` (`idUserHistory`, `nSoccer`, `nBasketball`, `nVoleyball`, `nTennis`, `nPaintball`, `nVideogames`, `nKarts`, `nVictories`, `nLoses`) VALUES (3, 0, 0, 0, 0, 0, 0, 0, 0, 0);
INSERT INTO `Spartan`.`History` (`idUserHistory`, `nSoccer`, `nBasketball`, `nVoleyball`, `nTennis`, `nPaintball`, `nVideogames`, `nKarts`, `nVictories`, `nLoses`) VALUES (4, 0, 0, 0, 0, 0, 20, 0, 20, 0);
INSERT INTO `Spartan`.`History` (`idUserHistory`, `nSoccer`, `nBasketball`, `nVoleyball`, `nTennis`, `nPaintball`, `nVideogames`, `nKarts`, `nVictories`, `nLoses`) VALUES (5, 0, 0, 0, 0, 0, 23, 0, 23, 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`Events`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`Events` (`idEvent`, `Sport`, `Description`, `Date`, `idEventAuthor`, `Spots`, `State`, `Place`, `Key`) VALUES (1, 'Videogame', 0x4C6574277320706C617920444F5441, '2014/10/31 22:00', 2, 1, 'Open', '51.508742,-0.120850', '1432');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`Spots`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`Spots` (`idEvent`, `idParticipant`, `Confirmation`) VALUES (1, 2, 'ToAssist');
INSERT INTO `Spartan`.`Spots` (`idEvent`, `idParticipant`, `Confirmation`) VALUES (1, 1, 'ToAssist');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`GroupTournaments`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`GroupTournaments` (`idTournament`, `Name`, `Description`, `Sport`, `State`, `idOrganizerGroup`, `Type`) VALUES (1, 'Inaguration of Spartan', 0x546F75726E616D656E7420746F20636F6E6D656D6F7261746520746865206372656174696F6E206F66205370617274616E203520417070, 'Soccer', 'Open', 1, 'Public');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`Teams`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`Teams` (`idTeam`, `TeamName`, `idCaptain`) VALUES (1, 'Seneca', 1);
INSERT INTO `Spartan`.`Teams` (`idTeam`, `TeamName`, `idCaptain`) VALUES (2, 'BoB', 4);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`TeamMembers`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`TeamMembers` (`TeamId`, `idMember`) VALUES (1, 1);
INSERT INTO `Spartan`.`TeamMembers` (`TeamId`, `idMember`) VALUES (1, 2);
INSERT INTO `Spartan`.`TeamMembers` (`TeamId`, `idMember`) VALUES (1, 3);
INSERT INTO `Spartan`.`TeamMembers` (`TeamId`, `idMember`) VALUES (2, 4);
INSERT INTO `Spartan`.`TeamMembers` (`TeamId`, `idMember`) VALUES (2, 5);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`ParticipantGroups`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`ParticipantGroups` (`idGroupTournament`, `idParticipantTeam`, `State`, `Position`) VALUES (1, 1, 'In', 0);
INSERT INTO `Spartan`.`ParticipantGroups` (`idGroupTournament`, `idParticipantTeam`, `State`, `Position`) VALUES (1, 2, 'In', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`SoloTournament`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`SoloTournament` (`idTournament`, `Name`, `Description`, `Sport`, `State`, `idOrganizerSolo`, `Type`) VALUES (1, 'Pokemon VGC', 0x4C6574277320506C617920506F6B656D6F6E205647432052756C6573, 'Videogames', 'Open', 1, 'Public');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`ParticipantsSolo`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`ParticipantsSolo` (`idSoloParticipant`, `idTournamentSolo`, `State`, `Position`) VALUES (1, 1, 'In', 0);
INSERT INTO `Spartan`.`ParticipantsSolo` (`idSoloParticipant`, `idTournamentSolo`, `State`, `Position`) VALUES (2, 1, 'In', 0);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`SoloTournamentEvents`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`SoloTournamentEvents` (`idSoloEvent`, `idSoloTournament`, `Date`, `State`) VALUES (1, 1, '2014/11/15', 'ToStart');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`GroupTournamentEvents`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`GroupTournamentEvents` (`idGroupEvent`, `GroupTournamentId`, `Date`, `State`) VALUES (1, 1, '2014/10/30 14:00', 'ToStart');

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`SoloEventParticipants`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`SoloEventParticipants` (`idSoloEvent`, `idSoloPart`) VALUES (1, 1);
INSERT INTO `Spartan`.`SoloEventParticipants` (`idSoloEvent`, `idSoloPart`) VALUES (1, 2);

COMMIT;


-- -----------------------------------------------------
-- Data for table `Spartan`.`GroupTournamentParticipants`
-- -----------------------------------------------------
START TRANSACTION;
USE `Spartan`;
INSERT INTO `Spartan`.`GroupTournamentParticipants` (`idGroupEvent`, `idParticipantTeam`) VALUES (1, 1);
INSERT INTO `Spartan`.`GroupTournamentParticipants` (`idGroupEvent`, `idParticipantTeam`) VALUES (1, 2);

COMMIT;

